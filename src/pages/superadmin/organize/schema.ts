import vine from '@vinejs/vine';

const profileSchema = vine.object({
  firstName: vine.string(),
  lastName: vine.string().optional(),
  birthDate: vine.string().optional(),
  phone: vine.string().maxLength(15).optional(),
});

const userSchema = vine.object({
  email: vine.string().email(),
  password: vine.string(),
  userName: vine.string().optional(),
  profile: profileSchema.clone(),
});

const addressSchema = vine.object({
  active: vine.boolean().optional(),
  language: vine.string().optional(),
  isMain: vine.boolean().optional(),
  name: vine.string().optional(),
  city: vine.string(),
  province: vine.string(),
  postalCode: vine.string().maxLength(5),
  roomNo: vine.string().optional(),
  floorNo: vine.string().optional(),
  village: vine.string().optional(),
  villageNo: vine.string().optional(),
  houseNo: vine.string().optional(),
  alley: vine.string().optional(),
  road: vine.string().optional(),
  building: vine.string().optional(),
  nation: vine.string().optional(),
  district: vine.string().optional(),
  subDistrict: vine.string().optional(),
  note: vine.string().optional(),
});

const branchSchema = vine.object({
  active: vine.boolean(),
  fromType: vine.enum(['OrdinaryPerson', 'JuristicPerson']),
  nameTh: vine.string().optional(),
  nameEn: vine.string().optional(),
  taxId: vine.string().maxLength(13),
  type: vine.enum([
    'human',
    'ordinary_partnership',
    'shop',
    'bop',
    'CompanyLimited',
    'PublicCompanyLimited',
    'LimitedPartnership',
    'Foundation',
    'Association',
    'JointVenture',
    'Others',
  ]),
  isMain: vine.boolean(),
  branchCode: vine.string(),
  openingDate: vine.string().optional(),
  websiteUrl: vine.string().optional(),
  contactEmail: vine.string().email().optional(),
  contactPhone: vine.string().maxLength(15).optional(),
  registerVat: vine.boolean().optional(),
  address: addressSchema.clone(),
});

const settingSchema = vine.object({
  active: vine.boolean(),
  defaultLanguage: vine.enum(['TH', 'EN', 'JP']),
  domainName: vine.string(),
  textDisplay: vine.string().optional(),
  theme: vine.enum(['light', 'dark']).optional(),
});

const addressesSchema = vine.array(
  vine.object({
    active: vine.boolean().optional(),
    language: vine.string().optional(),
    isMain: vine.boolean().optional(),
    name: vine.string().optional(),
    city: vine.string(),
    province: vine.string(),
    postalCode: vine.string().maxLength(5),
    roomNo: vine.string().optional(),
    floorNo: vine.string().optional(),
    village: vine.string().optional(),
    villageNo: vine.string().optional(),
    houseNo: vine.string().optional(),
    alley: vine.string().optional(),
    road: vine.string().optional(),
    building: vine.string().optional(),
    nation: vine.string().optional(),
    district: vine.string().optional(),
    subDistrict: vine.string().optional(),
    note: vine.string().optional(),
  }),
);

export const schemaCreateOrg = vine.object({
  nameTh: vine.string(),
  nameEn: vine.string(),
  taxId: vine.string(),
  active: vine.boolean(),
  status: vine.enum([
    'NewlyRegistered',
    'ActiveUser',
    'LoyalCustomer',
    'AtRisk',
    'Churned',
  ]),
  fromType: vine.enum(['OrdinaryPerson', 'JuristicPerson']),
  type: vine.enum([
    'human',
    'ordinary_partnership',
    'shop',
    'bop',
    'CompanyLimited',
    'PublicCompanyLimited',
    'LimitedPartnership',
    'Foundation',
    'Association',
    'JointVenture',
    'Others',
  ]),
  descriptionsTh: vine.string().optional(),
  descriptionsEn: vine.string().optional(),
  registerVat: vine.boolean(),
  openingDate: vine.string().optional(),
  websiteUrl: vine.string().optional(),
  contactEmail: vine.string().email(),
  contactPhone: vine.string().maxLength(15),
  contactWebsite: vine.string().optional(),
  businessEmail: vine.string().email().optional(),
  contactFacebook: vine.string().optional(),
  contactLine: vine.string().optional(),
  contactWhatsapp: vine.string().optional(),
  contactNote: vine.string().optional(),
  branch: branchSchema.clone(),
  address: addressSchema.clone(),
  user: userSchema.clone(),
  setting: settingSchema.clone(),
});

export const schemaUpdateOrg = vine.object({
  nameTh: vine.string(),
  nameEn: vine.string(),
  taxId: vine.string(),
  active: vine.boolean(),
  status: vine.enum([
    'NewlyRegistered',
    'ActiveUser',
    'LoyalCustomer',
    'AtRisk',
    'Churned',
  ]),
  fromType: vine.enum(['ordinaryPerson', 'juristicPerson']),
  type: vine.enum([
    'human',
    'ordinaryPartnership',
    'shop',
    'bop',
    'CompanyLimited',
    'PublicCompanyLimited',
    'LimitedPartnership',
    'Foundation',
    'Association',
    'JointVenture',
    'Others',
  ]),
  descriptionsTh: vine.string().optional(),
  descriptionsEn: vine.string().optional(),
  registerVat: vine.boolean(),
  openingDate: vine.string().optional(),
  websiteUrl: vine.string().optional(),
  contactEmail: vine.string().email(),
  contactPhone: vine.string().maxLength(15),
  contactWebsite: vine.string().optional(),
  businessEmail: vine.string().email().optional(),
  contactFacebook: vine.string().optional(),
  contactLine: vine.string().optional(),
  contactWhatsapp: vine.string().optional(),
  contactNote: vine.string().optional(),
  addresses: addressesSchema.clone(),
  setting: settingSchema.clone(),
});
